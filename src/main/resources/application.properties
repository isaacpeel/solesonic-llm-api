spring.config.import=optional:file:.env[.properties]

spring.application.name=Solesonic LLM API

server.servlet.context-path=/${BASE_URI}

spring.datasource.username=${POSTGRES_USER}

spring.datasource.url=${DB_URL}
spring.datasource.password=${DB_PASSWORD}

jira.api.uri=https://api.atlassian.com
jira.api.client.id=${JIRA_CLIENT_ID}
jira.api.client.secret=${JIRA_CLIENT_SECRET}

training.task.enabled=${TRAINING_ENABLED:false}
confluence.training.task.enabled=${CONFLUENCE_TRAINING_ENABLED:false}

spring.security.oauth2.resourceserver.jwt.issuer-uri=${ISSUER_URI}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${JWK_SET_URI}

spring.ai.vectorstore.pgvector.table-name=vector_store

spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.placeholders.DB_OWNER=${POSTGRES_USER}

cors.allowed.origins=${CORS_ALLOWED_ORIGINS}

spring.ai.mcp.client.name=mcp-client
spring.ai.mcp.client.version=1.0.0
spring.ai.mcp.client.type=sync
spring.ai.mcp.client.toolcallback.enabled=true
spring.ai.mcp.client.enabled=${MCP_ENABLED:false}

spring.ai.mcp.client.sse.connections.solesonic.url=http://localhost:8081

spring.security.oauth2.client.provider.authserver.issuer-uri=${ISSUER_URI}

spring.security.oauth2.client.registration.mcp-client.client-id=${MCP_CLIENT_ID}
spring.security.oauth2.client.registration.mcp-client.client-secret=${MCP_CLIENT_SECRET}
spring.security.oauth2.client.registration.mcp-client.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.mcp-client.provider=authserver

logging.level.io.modelcontextprotocol.client=DEBUG
logging.level.io.modelcontextprotocol.spec=DEBUG

solesonic.llm.bot.name=${BOT_NAME:solesonic-llm-api}

solesonic.llm.jira.url.template=${JIRA_URL_TEMPLATE:https://solesonic-llm-api.atlassian.net/browse/{issueId}
solesonic.llm.jira.cloud.id.path=${JIRA_CLOUD_ID_PATH:yourCloudId}
